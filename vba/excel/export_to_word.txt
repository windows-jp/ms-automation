Option Explicit

Function ExtructEmailUsername(ByVal EmailAddress As String)
    Dim EmailUsername As String
    Dim Regex As Object
    Dim Match As Variant
    
    Set Regex = CreateObject("VBScript.RegExp")
    Regex.Pattern = "(.*)@.*"
    Regex.Global = True
    
    Set Match = Regex.Execute(EmailAddress)
    EmailUsername = Match(0).SubMatches(0)
    
    ExtructEmailUsername = EmailUsername

End Function

Function GetProperties(ByVal Target As Object)
    Dim EmailAddress As String
    Dim Id As String
    Dim Password As String
    Dim DateStr As String
    Dim EmailUsername As String
    Dim Properties() As Variant

    'Excelからデータ取得
    EmailAddress = Cells(Target.Row, 3)
    Id = Cells(Target.Row, 7)
    Password = Cells(Target.Row, 8)
    
    'セルが空の場合はマクロを終了'
    If EmailAddress = "" Then
        MsgBox "メールアドレスが空です"
        End
    End If
    
    If Id = "" Then
        MsgBox "ユーザーIDが空です"
        End
    End If
    
    If Password = "" Then
        MsgBox "パスワードが空です"
        End
    End If

    '追加のデータを生成 & 加工
    DateStr = Format(Now, "yyyy/mm/dd")
    EmailUsername = ExtructEmailUsername(EmailAddress)
    
    Properties = Array(EmailAddress, Id, Password, DateStr, EmailUsername)

    GetProperties = Properties()

End Function

Function CopyDocFromTemplate(ByRef Properties() As Variant)
    Dim TemplateDir As String
    Dim TemplateFilename As String
    Dim TemplateFilePath As String
    Dim DestDir As String
    Dim DestFilename As String
    Dim DestFilePath As String
    
    TemplateDir = "C:\Users\opkd0\Desktop\crypt\templates\"
    TemplateFilename = "クリプト便アカウント利用書_(#EMAIL_USERNAME#).docx"
    TemplateFilePath = TemplateDir & TemplateFilename
    
    DestDir = "C:\Users\opkd0\Desktop\crypt\"
    DestFilename = Replace(TemplateFilename, "#EMAIL_USERNAME#", Properties(4))
    DestFilePath = DestDir & DestFilename
    
    FileCopy TemplateFilePath, DestFilePath
    
    CopyDocFromTemplate = DestFilePath

End Function

Sub ReplaceText(ByRef WordApp As Word.Application, ByVal BeforeText As String, ByVal AfterText As String)
    With WordApp.Selection.Find
        .ClearFormatting
        .Replacement.ClearFormatting
        .Text = BeforeText
        .Replacement.Text = AfterText
        .Execute Replace:=wdReplaceAll
    End With
End Sub

Sub ExportToWord(ByVal Target As Object)
    Dim Properties() As Variant
    Dim NewDocPath As String

    'Excelからプロパティ取得'
    Properties() = GetProperties(Target)
    NewDocPath = CopyDocFromTemplate(Properties) 'テンプレートからコピーされたWordファイルのフルパスが返される
    
    'Wordファイルを開く'
    Dim WordApp As Word.Application
    Dim NewDoc As Word.Document
    
    Set WordApp = New Word.Application
    Set NewDoc = WordApp.Documents.Open(NewDocPath)
    
    WordApp.Visible = False

    'Wordファイル内のテキスト置換'
    Call ReplaceText(WordApp, "#EMAIL_ADDRESS#", Properties(0))
    Call ReplaceText(WordApp, "#ID#", Properties(1))
    Call ReplaceText(WordApp, "#PASSWORD#", Properties(2))
    Call ReplaceText(WordApp, "#DATE#", Properties(3))
    
    NewDoc.Save
    NewDoc.Close
        WordApp.Quit

    Set WordApp = Nothing
    Set NewDoc = Nothing
    
    MsgBox "利用書を生成しました。" & vbCrLf & NewDocPath, vbInformation

End Sub

Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
    If Target.Column = 17 Then
        If Target.Row >= 4 Then
            Call ExportToWord(Target)
        End If
    End If
End Sub